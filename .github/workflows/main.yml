name: CI-CD to EKS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  CLUSTER_NAME: bluegreen-eks
  DOCKER_IMAGE: <your-dockerhub-username>/bluegreen-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: v1.29.0
    - name: Setup Docker
      uses: docker/setup-buildx-action@v3
    - name: Build and Push Docker Image
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker build -t $DOCKER_IMAGE:${{ github.run_number }} nodejs-app/app
        docker push $DOCKER_IMAGE:${{ github.run_number }}
    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION
    - name: Deploy to Green and Switch
      run: |
        kubectl apply -f nodejs-app/k8s/deployment-green.yaml
        kubectl set image deployment/nodejs-green nodejs=$DOCKER_IMAGE:${{ github.run_number }} --record
        kubectl rollout status deployment/nodejs-green
        kubectl patch service nodejs-service -p '{"spec":{"selector":{"app":"nodejs","color":"green"}}}'
