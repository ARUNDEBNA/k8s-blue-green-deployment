name: CI-CD to EKS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  CLUSTER_NAME: bluegreen-eks
  ECR_REPOSITORY: bluegreen-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, Tag, and Push Docker image to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.run_number }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG nodejs-app/app
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION

    - name: Deploy to Green and Switch
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.run_number }}
      run: |
        kubectl set image deployment/nodejs-green nodejs=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --record || kubectl apply -f nodejs-app/k8s/deployment-green.yaml
        kubectl rollout status deployment/nodejs-green
        kubectl patch service nodejs-service -p '{"spec":{"selector":{"app":"nodejs","color":"green"}}}'
